#!/usr/bin/env bash

# $1 = user input from tmux command-prompt
user_input="$1"

# Capture the current pane
scroll_position=$(tmux display -p -F "#{scroll_position}")
pane_height=$(tmux display -p -F "#{pane_height}")
if [ -z "$scroll_position" ] || [ -z "$pane_height" ]; then
  tmux capture-pane -p >/tmp/buffer.log
else
  start_line="$((scroll_position))"
  end_line="$((scroll_position - pane_height))"
  echo $start_line >>/tmp/buffer.log.log
  echo $end_line >>/tmp/buffer.log.log

  tmux capture-pane -p \
    -S "-$start_line" \
    -E "-$end_line" \
    >/tmp/buffer.log
fi

RELEVANT_TRACE=$(grep -E '^[[:space:]]*(at|-> at)' /tmp/buffer.log | grep "$user_input" | head -n 1)
PAREN_CONTENT=$(echo "$RELEVANT_TRACE" | grep -oP '\(.*?\)' | tr -d '()')

# Get the current tmux session ID
SESSION_ID=$(tmux display-message -p '#S')

# Find the tmux pane running Neovim in the current session
PANE_INFO=$(tmux list-panes -s -t "$SESSION_ID" -F '#{window_index} #{pane_index} #{pane_current_command}' | grep 'nvim' | head -n 1 | awk '{print $1, $2}')

# Check if a Neovim pane was found
if [ -n "$PANE_INFO" ]; then
  WINDOW_INDEX=$(echo "$PANE_INFO" | awk '{print $1}')
  PANE_INDEX=$(echo "$PANE_INFO" | awk '{print $2}')
  # Send the command to open the file in the found Neovim pane

  # Focus the window and pane running Neovim
  tmux select-window -t "$SESSION_ID:$WINDOW_INDEX"
  tmux select-pane -t "$PANE_INDEX"
  tmux send-keys -t "$SESSION_ID:$WINDOW_INDEX.$PANE_INDEX" ":JavaGo $PAREN_CONTENT"
  # sleep 1
  tmux send-keys -t "$SESSION_ID:$WINDOW_INDEX.$PANE_INDEX" Enter
  tmux display-message -d 5000 "Sent to $SESSION_ID and $PANE_INDEX and $WINDOW_INDEX"
else
  echo "$PAREN_CONTENT" | wl-copy
  tmux send -X copy-pipe-and-cancel "$(clipboard_copy_command)"
  tmux display-message -d 5000 "Copied $SESSION_ID and $PANE_INDEX"
  # tmux display-message -d 5000 "Copied $PAREN_CONTENT"
fi
