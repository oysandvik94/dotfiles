setw -g mouse on
# Force tmux to use utf-8
setw -gq utf8 on

set-option -g default-shell /usr/bin/zsh

set-option -sa terminal-overrides ",xterm*:Tc"
# set-option -ga terminal-overrides ",alacritty:Tc"
# set -g default-terminal "alacritty"

# Set theme
set -g status-position top

# Set sourcefile refresh
unbind r
bind-key r source-file ~/.config/tmux/tmux.conf  \; display-message "~/.tmux.conf reloaded"

# set prefix
set -g prefix C-Space
bind C-a send-prefix

bind -n M-H previous-window
bind -n M-L next-window

bind-key C-o switch-client -l

# Fix slow escape in nvim
set -sg escape-time 0
set-option -g focus-events on
set-option -g set-titles on

# Undercurl
# set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# split cwd
bind -r '"' split-window -c "#{pane_current_path}"
bind -r % split-window -h -c "#{pane_current_path}"
bind -r c new-window -c "#{pane_current_path}"

# Resize keybindings
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5


# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


# keep CWD when opening new window
unbind c
bind c new-window -c "#{pane_current_path}"

# tile all windows
unbind =
bind = select-layout tiled

# Copy mode
set-window-option -g mode-keys vi
bind -T copy-mode-vi 'v' send-keys -X begin-selection
set -g set-clipboard off
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "killall nvim"

unbind -T copy-mode-vi MouseDragEnd1Pane

# 1-index
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

# bind arrow keys
bind-key -n 'C-Left' if-shell "$is_vim" 'send-keys C-Left' 'select-pane -L'
bind-key -n 'C-Down' if-shell "$is_vim" 'send-keys C-Down' 'select-pane -D'
bind-key -n 'C-Up' if-shell "$is_vim" 'send-keys C-Up' 'select-pane -U'
bind-key -n 'C-Right' if-shell "$is_vim" 'send-keys C-Right' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
# arrow keys
bind-key -T copy-mode-vi 'C-Left' select-pane -L
bind-key -T copy-mode-vi 'C-Down' select-pane -D
bind-key -T copy-mode-vi 'C-Up' select-pane -U
bind-key -T copy-mode-vi 'C-Right' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Custom scripts
bind-key i run-shell "tmux neww ~/.local/bin/scripts/chtsh/tmux-cht.sh"
bind-key w run-shell "tmux neww tmux-wiki"
bind-key b run-shell "tmux neww tmux-wiki-bergen"
bind-key / run-shell "tmux neww ~/.local/bin/scripts/tmux-sessionizer"
# set -g @sessionx-bind 'f'
bind-key h run-shell "tmux neww ddgr"
bind-key l run-shell "~/.local/bin/scripts/tmux-save-buffer"

# Session hotkeys
bind-key M-j run-shell "~/.local/bin/scripts/tmux-sessionizer ~/.config/nvim"
bind-key M-k run-shell "~/.local/bin/scripts/tmux-sessionizer $MAIN_PROJECT"
bind-key M-l run-shell "~/.local/bin/scripts/tmux-sessionizer $SECONDARY_PROJECT"
bind-key M-h run-shell "~/.local/bin/scripts/tmux-sessionizer ~/obsidian/Sandvault"

bind-key p run-shell "~/.local/bin/scripts/tmux-scratch"

set-window-option -g automatic-rename on
set-option -g automatic-rename-format "#($HOME/.config/tmux/nerdwin #{pane_current_command})"
# set the default title format
set-option -g set-titles-string "#T - #W" # show the window name with the icon (defaults to false)

source-file "$HOME/.config/tmux/catpuccin.conf"

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect' 
set -g @plugin 'tmux-plugins/tmux-continuum' 
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'  


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
